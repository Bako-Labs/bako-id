diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..b58b603fea78041071d125a30db58d79b3d49217
--- /dev/null
+++ b/.idea/.gitignore
@@ -0,0 +1,5 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
diff --git a/.idea/30a20f4a6b40dd6a67e5d4a248825546.iml b/.idea/30a20f4a6b40dd6a67e5d4a248825546.iml
new file mode 100644
index 0000000000000000000000000000000000000000..24643cc37449b4bde54411a80b8ed61258225e34
--- /dev/null
+++ b/.idea/30a20f4a6b40dd6a67e5d4a248825546.iml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000000000000000000000000000000000000..ed7f54f8a204443c922e451be747e71f56f6e8f4
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/30a20f4a6b40dd6a67e5d4a248825546.iml" filepath="$PROJECT_DIR$/.idea/30a20f4a6b40dd6a67e5d4a248825546.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
index 0000000000000000000000000000000000000000..0e3703b89785bcd543c94e92071a525d97ab5248
--- /dev/null
+++ b/.idea/workspace.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="a541907a-6bcf-48e3-bc47-d85ac6d290cd" name="Changes" comment="" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="MacroExpansionManager">
+    <option name="directoryName" value="7d02skem" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 3
+}]]></component>
+  <component name="ProjectId" id="2c0pfOVALivuKQNCPuaffsL8kwm" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a541907a-6bcf-48e3-bc47-d85ac6d290cd" name="Changes" comment="" />
+      <created>1707258452660</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1707258452660</updated>
+      <workItem from="1707258453741" duration="39000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/dist/index.global.js b/dist/index.global.js
index a12a2f8b4f756fc496914a9b77dbc9258188296c..a5789e8827a23f54dd190b23515e1afd59c2c991 100644
--- a/dist/index.global.js
+++ b/dist/index.global.js
@@ -30417,7 +30417,7 @@ spurious results.`);
     configurables;
     /*
       TODO: Refactor so that there's no need for externalLoggedTypes
-    
+
       This is dedicated to external contracts added via `<base-invocation-scope.ts>.addContracts()` method.
       This is used to decode logs from contracts other than the main contract
       we're interacting with.
@@ -37469,12 +37469,6 @@ ${MessageCoinFragmentFragmentDoc}`;
   // src/transaction-response/getDecodedLogs.ts
   function getDecodedLogs(receipts, abiInterface) {
     return receipts.reduce((logs, r) => {
-      if (r.type === ReceiptType.LogData) {
-        logs.push(abiInterface.decodeLog(r.data, r.val1.toNumber(), r.id)[0]);
-      }
-      if (r.type === ReceiptType.Log) {
-        logs.push(abiInterface.decodeLog(new U64Coder().encode(r.val0), r.val1.toNumber(), r.id)[0]);
-      }
       return logs;
     }, []);
   }
diff --git a/dist/index.js b/dist/index.js
index f04e5c1216adea43d53ab8366413c5e1c88287b8..395a24b158fa02e496312736356bff00df96782e 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -3397,12 +3397,6 @@ var import_abi_coder3 = require("@fuel-ts/abi-coder");
 var import_transactions16 = require("@fuel-ts/transactions");
 function getDecodedLogs(receipts, abiInterface) {
   return receipts.reduce((logs, r) => {
-    if (r.type === import_transactions16.ReceiptType.LogData) {
-      logs.push(abiInterface.decodeLog(r.data, r.val1.toNumber(), r.id)[0]);
-    }
-    if (r.type === import_transactions16.ReceiptType.Log) {
-      logs.push(abiInterface.decodeLog(new import_abi_coder3.U64Coder().encode(r.val0), r.val1.toNumber(), r.id)[0]);
-    }
     return logs;
   }, []);
 }
diff --git a/dist/index.mjs b/dist/index.mjs
index 79f8c3c900bf101e90a841b4703d87d18c5691dd..fdc09c8660c17abf1435744ca9f644b56df381f3 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -3294,12 +3294,6 @@ import { U64Coder } from "@fuel-ts/abi-coder";
 import { ReceiptType as ReceiptType5 } from "@fuel-ts/transactions";
 function getDecodedLogs(receipts, abiInterface) {
   return receipts.reduce((logs, r) => {
-    if (r.type === ReceiptType5.LogData) {
-      logs.push(abiInterface.decodeLog(r.data, r.val1.toNumber(), r.id)[0]);
-    }
-    if (r.type === ReceiptType5.Log) {
-      logs.push(abiInterface.decodeLog(new U64Coder().encode(r.val0), r.val1.toNumber(), r.id)[0]);
-    }
     return logs;
   }, []);
 }
