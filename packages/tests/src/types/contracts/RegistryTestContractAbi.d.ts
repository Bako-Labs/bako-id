/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.81.0
  Forc version: 0.49.3
  Fuel-Core version: 0.22.1
*/

import type {
  BigNumberish,
  BN,
  Bytes,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
  StdString,
} from 'fuels';

import type { Enum } from "./common";

export enum RegistryTestContractErrorInput { DomainUnavailable = 'DomainUnavailable', DomainExpired = 'DomainExpired' };
export enum RegistryTestContractErrorOutput { DomainUnavailable = 'DomainUnavailable', DomainExpired = 'DomainExpired' };

export type RawBytesInput = { ptr: BigNumberish, cap: BigNumberish };
export type RawBytesOutput = { ptr: BN, cap: BN };

interface RegistryTestContractAbiInterface extends Interface {
  functions: {
    calculate_domain_price: FunctionFragment;
    register: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'calculate_domain_price', values: [StdString, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'register', values: [StdString, string, BigNumberish, BigNumberish]): Uint8Array;

  decodeFunctionData(functionFragment: 'calculate_domain_price', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'register', data: BytesLike): DecodedValue;
}

export class RegistryTestContractAbi extends Contract {
  interface: RegistryTestContractAbiInterface;
  functions: {
    calculate_domain_price: InvokeFunction<[domain: StdString, period: BigNumberish], BN>;
    register: InvokeFunction<[name: StdString, resolver: string, period: BigNumberish, timestamp: BigNumberish], void>;
  };
}
