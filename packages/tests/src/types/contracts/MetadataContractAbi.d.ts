/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.79.0
  Forc version: 0.49.3
  Fuel-Core version: 0.22.1
*/

import type {
  BigNumberish,
  BN,
  Bytes,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
  StdString,
} from 'fuels';

import type { Enum } from "./common";

export enum MetadataContractErrorInput { StorageNotInitialized = 'StorageNotInitialized', AlreadyInitialized = 'AlreadyInitialized', InvalidPermission = 'InvalidPermission', InvalidDomain = 'InvalidDomain' };
export enum MetadataContractErrorOutput { StorageNotInitialized = 'StorageNotInitialized', AlreadyInitialized = 'AlreadyInitialized', InvalidPermission = 'InvalidPermission', InvalidDomain = 'InvalidDomain' };

export type ContractIdInput = { value: string };
export type ContractIdOutput = ContractIdInput;
export type RawBytesInput = { ptr: BigNumberish, cap: BigNumberish };
export type RawBytesOutput = { ptr: BN, cap: BN };

interface MetadataContractAbiInterface extends Interface {
  functions: {
    constructor: FunctionFragment;
    get: FunctionFragment;
    get_all: FunctionFragment;
    save: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'constructor', values: [ContractIdInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'get', values: [StdString, StdString]): Uint8Array;
  encodeFunctionData(functionFragment: 'get_all', values: [StdString]): Uint8Array;
  encodeFunctionData(functionFragment: 'save', values: [StdString, StdString, StdString]): Uint8Array;

  decodeFunctionData(functionFragment: 'constructor', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_all', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'save', data: BytesLike): DecodedValue;
}

export class MetadataContractAbi extends Contract {
  interface: MetadataContractAbiInterface;
  functions: {
    constructor: InvokeFunction<[storage_id: ContractIdInput], void>;
    get: InvokeFunction<[handle_name: StdString, key: StdString], StdString>;
    get_all: InvokeFunction<[handle_name: StdString], Bytes>;
    save: InvokeFunction<[handle_name: StdString, key: StdString, value: StdString], void>;
  };
}
